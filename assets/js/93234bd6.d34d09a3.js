(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return y}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=o.a.createContext({}),u=function(e){var t=o.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return o.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=u(n),b=r,y=s["".concat(c,".").concat(b)]||s[b]||p[b]||a;return n?o.a.createElement(y,i(i({ref:t},d),{},{components:n})):o.a.createElement(y,i({ref:t},d))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=b;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var d=2;d<a;d++)c[d]=n[d];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(8),a=(n(0),n(102)),c={id:"docker",title:"Cylon Docker Image",sidebar_label:"Docker"},i={unversionedId:"docker",id:"docker",isDocsHomePage:!1,title:"Cylon Docker Image",description:"Cylon has a few heavy dependencies such as OpenMPI and Apache Arrow that needs to be compiled and configured",source:"@site/docs/docker.md",sourceDirName:".",slug:"/docker",permalink:"/docs/docker",editUrl:"https://github.com/cylondata/cylon/edit/master/docs/docs/docker.md",version:"current",sidebar_label:"Docker",frontMatter:{id:"docker",title:"Cylon Docker Image",sidebar_label:"Docker"},sidebar:"someSidebar",previous:{title:"Source Compilation",permalink:"/docs/"},next:{title:"Cylon Conda Binaries",permalink:"/docs/conda"}},l=[{value:"Get started with Docker",id:"get-started-with-docker",children:[]}],d={toc:l};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Cylon has a few heavy dependencies such as OpenMPI and Apache Arrow that needs to be compiled and configured\nbefore start writing Cylon applications. While Cylon build takes care of these things for you, optionally\nfollowing approaches can be used to quick start with the development process."),Object(a.b)("h2",{id:"get-started-with-docker"},"Get started with Docker"),Object(a.b)("p",null,"Cylon docker images contains prebuilt cylon binaries and environment configured to start development right away."),Object(a.b)("p",null,"Start by creating a volume to hold you source code."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"docker volume create cylon-vol\n")),Object(a.b)("p",null,"Then start a Cylon container as follows with your new volume mounted at /code."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"docker run -it -v cylon-vol:/code cylondata/cylon\n")),Object(a.b)("p",null,"Optionally, you could skip creating a volume and mount a local folder to the /code directory."),Object(a.b)("p",null,"You could either develop directly inside the container using a supported IDE to connect to the container(Recommended)\nor you could develop on the host machine and test inside the container."))}u.isMDXComponent=!0}}]);