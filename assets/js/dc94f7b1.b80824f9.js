(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(8),l=(n(0),n(104)),o={id:"0.3.0",title:"Cylon Release 0.3.0",sidebar_label:"Cylon Release 0.3.0"},c={unversionedId:"release/0.3.0",id:"release/0.3.0",isDocsHomePage:!1,title:"Cylon Release 0.3.0",description:"Cylon 0.3.0 adds the following features. Please note that this release may not be backward",source:"@site/docs/release/cylon_release_0.3.0.md",sourceDirName:"release",slug:"/release/0.3.0",permalink:"/docs/release/0.3.0",editUrl:"https://github.com/cylondata/cylon/edit/master/docs/docs/release/cylon_release_0.3.0.md",version:"current",sidebar_label:"Cylon Release 0.3.0",frontMatter:{id:"0.3.0",title:"Cylon Release 0.3.0",sidebar_label:"Cylon Release 0.3.0"},sidebar:"someSidebar",previous:{title:"Cylon Release 0.3.1",permalink:"/docs/release/0.3.1"},next:{title:"Cylon Release 0.2.0",permalink:"/docs/release/0.2.0"}},i=[{value:"Major Features",id:"major-features",children:[{value:"C++",id:"c",children:[]},{value:"Python (Pycylon)",id:"python-pycylon",children:[]}]},{value:"Examples",id:"examples",children:[]},{value:"License",id:"license",children:[]}],s={toc:i};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Cylon 0.3.0 adds the following features. Please note that this release may not be backward\ncompatible with previous releases."),Object(l.b)("h2",{id:"major-features"},"Major Features"),Object(l.b)("h3",{id:"c"},"C++"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Adding order-by and distributed table sort operations"),Object(l.b)("li",{parentName:"ul"},"Multiple partitioning schemes (modulo, hash and range)"),Object(l.b)("li",{parentName:"ul"},"C++ API refactoring"),Object(l.b)("li",{parentName:"ul"},"Performance improvements in the existing C++ API")),Object(l.b)("h3",{id:"python-pycylon"},"Python (Pycylon)"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Exposing table operators similar to Pandas (28 new operators).",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Comparison operators"),Object(l.b)("li",{parentName:"ul"},"Logical Operators"),Object(l.b)("li",{parentName:"ul"},"Math operators"),Object(l.b)("li",{parentName:"ul"},"Null/NA value filtering and filling"),Object(l.b)("li",{parentName:"ul"},"Filtering and updating (including inplace ops)"),Object(l.b)("li",{parentName:"ul"},"Schema refactoring"),Object(l.b)("li",{parentName:"ul"},"Experimental indexing abstract"))),Object(l.b)("li",{parentName:"ul"},"Distributed Data sorting Python bindings"),Object(l.b)("li",{parentName:"ul"},"Adding new examples for updated operations. (",Object(l.b)("a",{parentName:"li",href:"https://github.com/cylondata/cylon/tree/master/python/examples"},"https://github.com/cylondata/cylon/tree/master/python/examples"),")")),Object(l.b)("p",null,"You can download source code from ",Object(l.b)("a",{parentName:"p",href:"https://github.com/cylondata/cylon/releases"},"Github")),Object(l.b)("h2",{id:"examples"},"Examples"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"https://github.com/cylondata/cylon/tree/0.3.0/cpp/src/examples"},"C++ examples")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"https://github.com/cylondata/cylon/tree/0.3.0/python/examples"},"Python examples")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"https://github.com/cylondata/cylon/tree/0.3.0/java/src/main/java/org/cylondata/cylon/examples"},"Java examples"))),Object(l.b)("h2",{id:"license"},"License"),Object(l.b)("p",null,"Licensed under the Apache License, Version 2.0: ",Object(l.b)("a",{parentName:"p",href:"http://www.apache.org/licenses/LICENSE-2.0"},"http://www.apache.org/licenses/LICENSE-2.0")))}p.isMDXComponent=!0},104:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),b=p(n),m=a,d=b["".concat(o,".").concat(m)]||b[m]||u[m]||l;return n?r.a.createElement(d,c(c({ref:t},s),{},{components:n})):r.a.createElement(d,c({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<l;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);